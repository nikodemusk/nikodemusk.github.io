---
title: "Uppgifter Pr1, loopar"
format:
  html:
    fontsize: 1em
    css: style.css
editor: visual
---

# Loopar i Python
## while-loopar

**I uppgift 1 -- 7 ska du använda `while`-loopar i din lösning**.
---

### Uppgift 1

Skapa ett program som beräknar och skriver ut "tolvans
multiplikatikonstabell" rad för rad enligt
nedan:

::: {style="background-color: lightblue; width: 100%; height: 280px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}

```{python}
#| echo: false
i = 1
while i <= 12:
   print(f"{i:2.0f} * 12 = {(i * 12):3.0f}")
   i += 1
```
:::

<div style="color: red;">**Lösningsförslag uppgift 1**</div>
[Se denna länk](https://gist.github.com/codebubo/4493e32454dd4157a99a0111ecff1425)

### Uppgift 2

I spelet <span class="small-caps">lotto</span> ska man tippa 7 olika nummer
mellan  1 och 35. Skriv ett program som slumpar fram 7 heltal mellan 1 och
35 under en körning.

::: {style="background-color: lightyellow; width: 100%; height: 150px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
&#9432;
För att skapa ett slumptal i Python behövs importeras slumptalsbiblioteket.
Detta görs överst i koden, varpå ett slumpmässigt heltal skapas enligt
följande:

```python
import random as rand
slumptal = rand.randint(1, 100) # Skapar ett slumptal mellan, och inklusive, 1 och 100
```
:::

I nuläget får vi acceptera att det kan uppstå flera nummer av samma värde, t ex
två st. sjuor. Detta kommer att kunna undvikas efter att vi gått igenom listor
i Python; då kommer vi också att sortera numren i storleksordning.

Körningsexempel:

::: {style="background-color: lightblue; width: 100%; height: 50px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```{python}
#| echo: false
import random as rand
rand.seed (782974)
i = 1
print("Din LOTTO-rad:", end=" ")
while i <= 7:
    print(rand.randint(1,35), end=" ")
    i += 1
```
:::

<div style="color: red;">**Lösningsförslag uppgift 2**</div>
[Se denna länk](https://gist.github.com/codebubo/3fff44ded6b2eaa6a6f2dba95ba252df)

### Uppgift 3

I stryktipset är det 13 matcher som ska tippas med 1, X eller 2.
Skriv ett program som slumpar fram 13 st. 1, X och 2 under en körning.

Körningsexempel:

::: {style="background-color: lightblue; width: 100%; height: 620px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```{python}
#| echo: false
import random as rand
i = 1
print(f"{'Match nr':>10}. {'Resultat':>11}")
print("==========================")
while i <= 13:
    res = rand.randint(1, 3)
    if res == 1:
        res = "1"
    elif res == 2:
        res = "X"
    else:
        res = "2"
    print(f"{i:6.0f} {res:>12}")
    print("--------------------------")
    i += 1
```
:::

Tips: Formatera utskriften först efter att du vet hur du gör för att få
slumpvis 1, X eller 2.

<div style="color: red;">**Lösningsförslag uppgift 3**</div>
[Se denna länk](https://gist.github.com/codebubo/58c3333e698d41210a376f12c4ad69b8)

### Uppgift 4

Skriv ett program där man ska gissa ett heltal mellan, och inklusive, 1 och 10.
Gissningarna ska göras tills man gissar rätt. Efter en gissning ska
programmet säga om det gissade talet var för stort eller för litet. När rätt tal
gissats så ska det skriva ut hur många gissningar som behövdes.

Körningsexempel:

::: {style="background-color: lightblue; width: 100%; height: 270px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}

Gissa ett heltal mellan 1 och 10 -> 5<br>
Talet 5 är för stort.<br>
Gissa ett heltal mellan 1 och 10 -> 3<br>
Talet 3 är för stort.<br>
Gissa ett heltal mellan 1 och 10 -> 1<br>
Talet 1 är för litet.<br>
Gissa ett heltal mellan 1 och 10 -> 2<br>
RÄTT GISSAT!<br>
<br>
Du klarade spelet på gissning nr. 4.
:::

<div style="color: red;">**Lösningsförslag uppgift 4**</div>
[Se denna länk](https://gist.github.com/codebubo/8e3a46d5cd58a0e871109451c79d74c5)

### Uppgift 5

Skriv ett program som beräknar och skriver ut alla heltalslösningar till
ekvationen $2x+3y=120$ i intervallet $-50 \leq x,y \leq 50$. T ex gäller att
$x=30$ och $y=20$ är en lösning.

Tips: Låt programmet testa olika värden på $x$ och $y$ i en nästlad loop.

<div style="color: red;">**Lösningsförslag uppgift 5**</div>
[Se denna länk](https://gist.github.com/codebubo/81024df9ed1deea8ebd987a6c2ff7fa9)

### Uppgift 6

Försök att skapa följande figurer med hjälp av nästlade loopar:

::: {style="background-color: lightblue; width: 100%; height: 220px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```{python}
#| echo: false
print("Figur A\n")
max_rows = 6
max_cols = max_rows
current_row = 0
while current_row <= max_rows:
    current_col = 0
    while current_col <= max_cols:
        print("* ", end=" ")
        current_col += 1
    print()
    current_row += 1
print()
```
:::

::: {style="background-color: lightblue; width: 100%; height: 220px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```{python}
#| echo: false
print("Figur B\n")
max_rows = 6
max_cols = max_rows
current_row = 0
while current_row <= max_rows:
    current_col = 0
    while current_col <= max_cols:
        if current_col % 2 != 0 and current_row % 2 != 0:
            print("  ", end = " ")
        else:
            print("* ", end=" ")
        current_col += 1
    print()
    current_row += 1
print()
```
:::

::: {style="background-color: lightblue; width: 100%; height: 220px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}

```{python}
#| echo: false
print("Figur C\n")
max_rows = 6
max_cols = max_rows
current_row = 0
while current_row <= max_rows:
    current_col = 0
    while current_col <= max_cols:
        if current_row % 2 == 0:
            if current_col % 2 == 0:
                print("* ", end = " ")
            else:
                print("  ", end=" ")
        elif current_row % 2 != 0:
            if current_col % 2 != 0:
                print("* ", end = " ")
            else:
                print("  ", end=" ")
        current_col += 1
    print()
    current_row += 1
```
:::

<div style="color: red;">**Lösningsförslag uppgift 6**</div>
[Se denna länk](https://gist.github.com/codebubo/31a48c3ef9a4c66b21499507daa1d551)

### Uppgift 7
Skriv ett program som genom en meny ger en avatar tre egenskaper plus ett namn:

* Namn, ska kunna sättas till godtycklig sträng
* Färg, ska kunna väljas gul (g), blå (b) eller röd (r)
* Styrka, ska kunna väljas som ett heltal mellan 1 och 10
* Pronomen, ska kunna väljas han, hon eller hen
* Menyn ska vara inmatningssäker, dvs om användaren anger ett otillåtet värde
så ska denna inmatning (och enbart denna inmatning) göras om.

Exempelkörning:

::: {style="background-color: lightblue; width: 100%; height: 220px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```
Ange avatarens namn -> Efelia
Ange färgen för Efelia: Gul (g), Blå (b) eller Röd (r) -> s
Otillåtet val! Ange färgen Gul (g), Blå (b) eller Röd (r) -> r
Ange styrka (heltal 1 - 10) -> 7
Ange tilltalspronomen (han/hon/hen) -> hon

# Datorn skriver ut
Det här är Efelia, hon är en röd avatar med styrkan 7.
Snabbheten beräknas till 3.
```
:::

Snabbheten är det som saknas upp till 10 från  den angivna styrkan.

::: {style="background-color: lightyellow; width: 100%; height: 1360px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
&#9432; **Tips 1 -- fritextval**

Om det finns flera olika giltiga alternativ och man önskar filtrera bort
ogiltiga inmatningar bland dessa alternativ, kan Pythons
`in`-operator användas. Om vi vill att användaren ska skriva in
"ÄPPLE" eller "BANAN" som ett svar på en fråga så kan vi deklarera en
variabel enligt följande:

```python
frukter = {"ÄPPLE", "BANAN"}
frukt = input("Ange antingen ÄPPLE eller BANAN -> ")
if frukt in frukter:
    print("Tack för ditt val!")
else:
    print("Ogiltigt val")
```

&#9432; **Tips 2 -- versaler och gemener**

Python gör ju skillnad på versaler och gemener ("stora" och "små" bokstäver),
det gör att en inmatning t ex "hon", "Hon" eller "HON" kommer att tolkas på
olika sätt. Det kan man sätta villkor för, men det kan bli många varianter att
hantera. Ett vanligare sätt är att göra om inmatningen till versaler, och sedan
göra jämförelsen mot versaler. Det görs med den s.k *strängmetoden* `upper`.

Ex:
```{python}
#| echo: true
my_str = "abc"
my_upper_str = my_str.upper()
print(my_upper_str)
```

Då kan en jämförelse bli:
```{python}
#| echo: true
# Testar om användaren matar in abc, oberoende av skiftläge
if my_upper_str == "ABC":
    print("Du matade in rätt bokstäver i rätt ordning!")
    # Det spelar ingen roll om användaren matade in abc, aBc
    # eller någon annan kombination av skiftlägen.
```

Det finns även en strängmetod som heter `lower` (vilken skriver ut en sträng
med gemener, "små bokstäver"). Den kan användas enligt
`my_lower_str = my_str.lower()` 

::::{.v-space}
::::
&#9432; **Tips 3 -- tal i strängar**

För att testa om en inmatning är ett positivt heltal kan strängmetoden
`isdigit` användas (minns att `input` alltid ger en sträng). Om strängen
utgörs av ett heltal går det att konvertera till typen `int`.
Men om strängen inte utgörs av ett heltal kommer ett försök till konvertering
att krascha programmet. Därför ska konvertering ske först efter att programmet
har försäkrat sig om att det är möjligt med en konvertering.

Ex:

```{python}
#| echo: true
# Testar om en sträng utgörs av ett heltal, och konverterar det till i så fall
# till heltalstyp varpå det multipliceras med 2.
my_str = "123" # Ett tal i en sträng
if my_str.isdigit():
    my_number = int(my_str)
    print(2*my_number)
else:
    print("Strängen var inte ett heltal, och aritmetiken blir nonsens!")
```

:::

<div style="color: red;">**Lösningsförslag uppgift 7**</div>
[Se denna länk](https://gist.github.com/codebubo/8972d09c18eedd43901f79d0922e5cab)

## for-loopar

**I uppgift 8 -- ska du använda `for`-loopar i din lösning**.
---

### Uppgift 8
I [uppgift 4](https://codebubo.github.io/pr1/python/uppgifter/loopar/#uppgift-4)
skapade du ett program som lät en spelare gissa ett tal från 1 t o m 10.
Modifiera detta program så att det startar om efter att spelaren har lyckats
lista ut talet. Programmet ska totalt köras tre gånger, och när den tredje
omgången är över ska det avslutas med att skriva ut medelvärdet på antalet
gissningar som behövdes avrundat till en decimal. Använd en `for`-loop som
kontrollstruktur för omstarten av programmet.

Körningsexempel:

::: {style="background-color: lightblue; width: 100%; height: 710px; padding: 10px; margin-top: 20px;margin-bottom: 10px;"}
```
SPELOMGÅNG 1
----------------
Gissa ett tal mellan 1 och 10 ->5
Talet 5 är för litet.
Gissa ett tal mellan 1 och 10 ->7
Talet 7 är för litet.
Gissa ett tal mellan 1 och 10 ->9
Talet 9 är för litet.
Gissa ett tal mellan 1 och 10 ->10
RÄTT GISSAT!
Du klarade spelet på gissning nr. 4.

SPELOMGÅNG 2
----------------
Gissa ett tal mellan 1 och 10 ->5
Talet 5 är för stort.
Gissa ett tal mellan 1 och 10 ->3
Talet 3 är för litet.
Gissa ett tal mellan 1 och 10 ->4
RÄTT GISSAT!
Du klarade spelet på gissning nr. 3.

SPELOMGÅNG 3
----------------
Gissa ett tal mellan 1 och 10 ->5
Talet 5 är för stort.
Gissa ett tal mellan 1 och 10 ->2
Talet 2 är för stort.
Gissa ett tal mellan 1 och 10 ->1
RÄTT GISSAT!
Du klarade spelet på gissning nr. 3.

Medelvärdet för antalet gissningar per tal: 3.3
```
:::

<div style="color: red;">**Lösningsförslag uppgift 8**</div>
[Se denna länk](https://gist.github.com/codebubo/0cef213c0e2887d9ccb98ad8c2db6e28)